version: '3.8'

services:
  # ======================= Application Backend =======================
  backend:
    container_name: backend
    build:
      context: ./backend
    ports:
      - "8080:8080"
    depends_on:
      - db
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://db:5432/mydb
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
    networks:
      - app-network

  # ======================= Application Frontend =======================
  frontend:
    container_name: frontend
    build:
      context: ./frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - app-network

  # ======================= PostgreSQL Database =======================
  db:
    container_name: db
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: mydb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5433:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - app-network

  # ======================= Jenkins =======================
  jenkins:
    container_name: jenkins
    build:
      context: ./jenkins
    ports:
      - "7072:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - ~/.m2:/var/jenkins_home/.m2
    depends_on:
      - sonarqube
    networks:
      - app-network

  # ======================= SonarQube =======================
  sonarqube:
    container_name: sonarqube
    image: sonarqube:lts
    ports:
      - "9000:9000"
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://sonar_db:5432/sonar
      SONAR_JDBC_USERNAME: sonar
      SONAR_JDBC_PASSWORD: sonar
    depends_on:
      - sonar_db
    networks:
      - app-network
    volumes:
      - sonarqube_data:/opt/sonarqube/data
      - sonarqube_extensions:/opt/sonarqube/extensions

  sonar_db:
    container_name: sonar_db
    image: postgres:15
    restart: always
    environment:
      POSTGRES_USER: sonar
      POSTGRES_PASSWORD: sonar
      POSTGRES_DB: sonar
    volumes:
      - sonar_db_data:/var/lib/postgresql/data
    networks:
      - app-network

  # ======================= Prometheus =======================
  prometheus:
    container_name: prometheus
    image: prom/prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    networks:
      - app-network

  # ======================= Grafana =======================
  grafana:
    container_name: grafana
    image: grafana/grafana
    ports:
      - "3001:3000"
    networks:
      - app-network

# ======================= Volumes =======================
volumes:
  db_data:
  jenkins_home:
  sonarqube_data:
  sonarqube_extensions:
  sonar_db_data:

# ======================= Networks =======================
networks:
  app-network:
    driver: bridge
